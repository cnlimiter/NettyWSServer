plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

version = project.version
group = project.maven_group

repositories {
    mavenCentral()
}

configurations {
    shadow
    implementation.extendsFrom shadow
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation 'org.projectlombok:lombok:1.18.24'
    compileOnly 'org.slf4j:slf4j-api:2.0.3'
    testImplementation 'org.slf4j:slf4j-simple:2.0.3'

    implementation 'io.netty:netty-buffer:4.1.82.Final'
    implementation 'io.netty:netty-codec:4.1.82.Final'
    shadow 'io.netty:netty-codec-http:4.1.82.Final'
    implementation 'io.netty:netty-common:4.1.82.Final'
    implementation 'io.netty:netty-handler:4.1.82.Final'
    implementation 'io.netty:netty-resolver:4.1.82.Final'
    implementation 'io.netty:netty-transport:4.1.82.Final'



    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.slf4j:slf4j-simple:2.0.3'

}

artifacts {
    archives jar
    archives shadowJar
}

shadowJar {
    project.configurations.shadow.setTransitive(true);
    configurations = [project.configurations.shadow]
    relocate 'io.netty.handler.codec', "cn.evolvefield.sdk.ws.netty.handler.http"
    classifier = ""
    archiveBaseName.set("${project.archives_base_name}" as String)
    archiveVersion.set("${project.version}" as String)

}

test {
    useJUnitPlatform()
}


publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
            version = "${project.version}"
            artifactId = "${project.archives_base_name}"
            groupId = "${project.maven_group}"
        }
    }

    repositories {
        if (System.getenv('MAVEN_USERNAME') != null && System.getenv('MAVEN_PASSWORD') != null) {
            maven {
                name 'release'
                url = 'https://maven.nova-committee.cn/releases'

                credentials {
                    username System.getenv('MAVEN_USERNAME')
                    password System.getenv('MAVEN_PASSWORD')
                }
            }
        }
    }
}
